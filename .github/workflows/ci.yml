name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

# Cancel superseded runs on the same ref
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v5

      # Set up a real Conda env, as your install flow expects conda + mamba.
      # Official action docs: conda-incubator/setup-miniconda.
      - name: Set up Miniconda (${{ matrix.python-version }})
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: protpardelle
          channels: conda-forge,bioconda,defaults
          use-mamba: true
          auto-activate-base: false

      # The setup script installs uv, torch and protpardelle package
      - name: Install project (uv + torch + package)
        shell: bash -l {0}
        run: |
          bash setup.sh --dev

      - name: Install Foldseek
        shell: bash -l {0}
        run: |
          conda install -c conda-forge -c bioconda foldseek -y

      # Use dev mode to create the params directory structure without network downloads.
      - name: Prepare model parameters (dev-only; no downloads)
        shell: bash -l {0}
        run: |
          bash download_model_params.sh --dev

      - name: Show environment
        shell: bash -l {0}
        run: |
          python -V
          which python
          pip list | grep -E '^(torch|protpardelle|ruff|mypy)' || true

      # The pytest.ini defines slow/gpu/requires_model/requires_checkpoint markers; exclude them in CI.
      - name: Run tests
        shell: bash -l {0}
        run: |
          mkdir -p reports
          pytest -m "not slow and not gpu and not requires_model and not requires_checkpoint" --junit-xml=reports/junit.xml

      - name: Upload JUnit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.python-version }}
          path: reports/junit.xml
