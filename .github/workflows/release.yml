name: Release

on:
    workflow_dispatch:
        inputs:
            tag:
                description: "Tag to release"
                required: true
                type: string
            enable_pypi:
                description: "Enable PyPI publishing"
                required: false
                type: boolean
                default: false
            enable_github_release:
                description: "Enable GitHub release creation"
                required: false
                type: boolean
                default: false

env:
    PYTHON_VERSION: "3.10"

jobs:
    release:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            id-token: write

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                  version: "latest"

            - name: Install build dependencies
              run: |
                  uv pip install build twine

            - name: Build package
              run: |
                  python -m build

            - name: Check package
              run: |
                  twine check dist/*

            - name: Publish to PyPI
              if: ${{ inputs.enable_pypi == true }}
              env:
                  TWINE_USERNAME: __token__
                  TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
              run: |
                  if [ -z "${{ secrets.PYPI_API_TOKEN }}" ]; then
                    echo "‚ùå PyPI publishing requested but PYPI_API_TOKEN secret not configured"
                    exit 1
                  fi
                  echo "üöÄ Publishing to PyPI..."
                  twine upload dist/*
                  echo "‚úÖ Successfully published to PyPI"

            - name: Create GitHub Release (Draft)
              uses: softprops/action-gh-release@v2
              if: ${{ inputs.enable_github_release == true }}
              with:
                  tag_name: ${{ inputs.tag }}
                  name: Release ${{ inputs.tag }}
                  body: |
                      ## Changes in ${{ inputs.tag }}

                      See the [changelog](CHANGELOG.md) for detailed changes.

                      ## Installation

                      ```bash
                      pip install protpardelle
                      ```

                      ## Quick Start

                      See the [README](README.md) for usage examples.
                  draft: true
                  prerelease: ${{ contains(inputs.tag, 'rc') || contains(inputs.tag, 'alpha') || contains(inputs.tag, 'beta') }}

            - name: Build Summary
              run: |
                  echo "‚úÖ Package built successfully"
                  echo "üì¶ Package files created in dist/"
                  echo ""
                  echo "üîí Publishing Status:"
                  if [ "${{ inputs.enable_pypi }}" = "true" ]; then
                    if [ -z "${{ secrets.PYPI_API_TOKEN }}" ]; then
                      echo "- PyPI Publishing: REQUESTED but SECRET NOT CONFIGURED"
                    else
                      echo "- PyPI Publishing: ENABLED"
                    fi
                  else
                    echo "- PyPI Publishing: DISABLED"
                  fi

                  if [ "${{ inputs.enable_github_release }}" = "true" ]; then
                    echo "- GitHub Release: ENABLED (will be created as DRAFT)"
                  else
                    echo "- GitHub Release: DISABLED"
                  fi
                  echo ""
                  echo "üìù Note: GitHub releases are created as DRAFT (not published automatically)"
