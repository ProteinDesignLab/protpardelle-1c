name: Code Quality

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    lint:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                  version: "latest"

            - name: Install linting tools
              run: |
                  uv pip install ruff black isort mypy pre-commit

            - name: Run ruff
              run: |
                  ruff check src/ tests/ --output-format=github

            - name: Run black
              run: |
                  black --check --diff src/ tests/

            - name: Run isort
              run: |
                  isort --check-only --diff src/ tests/

            - name: Run mypy
              run: |
                  mypy src/protpardelle --ignore-missing-imports --show-error-codes

    format:
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        permissions:
            contents: write
            pull-requests: write

        steps:
            - uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                  version: "latest"

            - name: Install formatting tools
              run: |
                  uv pip install black isort

            - name: Format code
              run: |
                  black src/ tests/
                  isort src/ tests/

            - name: Create Pull Request with formatting fixes
              uses: peter-evans/create-pull-request@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: "style: auto-format code"
                  title: "style: auto-format code"
                  body: |
                      ## Auto-formatting

                      This PR automatically formats the code according to project standards.

                      ### Changes
                      - Applied black formatting
                      - Applied isort import sorting

                      ### Review
                      Please review the formatting changes and merge if acceptable.
                  branch: auto-format
                  delete-branch: true

    security-scan:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: "sarif"
                  output: "trivy-results.sarif"

            - name: Upload Trivy scan results to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v2
              if: always()
              with:
                  sarif_file: "trivy-results.sarif"

            - name: Run Bandit security linter
              run: |
                  pip install bandit
                  bandit -r src/ -f json -o bandit-report.json || true
                  bandit -r src/ -f txt

            - name: Upload Bandit results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: bandit-report
                  path: bandit-report.json

    complexity:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install complexity analysis tools
              run: |
                  pip install radon xenon

            - name: Analyze code complexity
              run: |
                  echo "## Code Complexity Analysis" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY

                  echo "### Cyclomatic Complexity" >> $GITHUB_STEP_SUMMARY
                  radon cc src/ -a -s >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY

                  echo "### Maintainability Index" >> $GITHUB_STEP_SUMMARY
                  radon mi src/ -s >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY

                  echo "### Halstead Complexity" >> $GITHUB_STEP_SUMMARY
                  radon hal src/ -s >> $GITHUB_STEP_SUMMARY

            - name: Check complexity thresholds
              run: |
                  xenon --max-absolute B --max-modules A --max-average A src/
