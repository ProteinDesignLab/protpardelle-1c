sampling:
  num_steps: 500 # number of denoising steps
  s_churn: 200 # add s_churn / num_steps amount of noise when noise level is between s_max and s_min
  step_scale: 1.2 # inverse temperature, 1.0 is taking denoising steps exactly according to model's predictions, 0.8 is higher temperature
  noise_schedule:
    _partial_: true
    _target_: "protpardelle.core.diffusion.noise_schedule"
    s_max: 80 # start applying schurn after this noise level
    s_min: 0.001 # stop applying schurn after this noise level
  motif_file_path: # input motif, can also be a directory of motifs
  partial_diffusion:
    enabled: false # use partial diffusion
    pdb_file_path: # input pdb to apply partial diffusion
    num_steps: 100 # go back these many steps, 100 here with sampling.num_steps=500 means going back to step 400
  dx: 0.0 # translate motif in x-axis
  dy: 0.0 # translate motif in y-axis
  dz: 0.0 # translate motif in z-axis
  conditional_cfg:
    enabled: true # when true, run conditional sampling, set to false for unconditional sampling
    discontiguous_motif_assignment:
      enabled: true # set to true if motif is discontiguous (treat each residue independently)
      strategy: "fixed"
      fixed_motif_pos: []
    num_recurrence_steps: 1 # from Universal Guidance paper: repeat each denoising step these many times
    crop_conditional_guidance:
      enabled: true
      start: 0.0
      end: 2.0
      freq: 1 # apply crop-conditional info every {freq} many steps (e.g. 2 means one step unconditional, one step conditional)
      freq_start: 0.0
      freq_end: 0.0 # after this, go back to constant crop conditional guidance
      strategy: "backbone-sidechain" # ['backbone', 'sidechain', 'sidechain-tip', 'backbone-sidechain']
    reconstruction_guidance:
      enabled: true
      start: 0.0
      end: 2.0
      schedule: "custom" # ['constant', 'quadratic', 'cubic', 'custom']
      max_scale: 10.0 # max scalar scaling applied to reconstruction guidance gradient
      loss_weights:
        motif: 1.0
    replacement_guidance:
      enabled: true
      start: 0.0
      end: 0.92

  allatom_cfg:
    sidechain_mode: true
    skip_mpnn_proportion: 0.6
    use_fullmpnn: false
    use_fullmpnn_for_final: true
    anneal_seq_resampling_rate: "linear"
    jump_steps: true
    uniform_steps: false

  stage2_cfg:
    enabled: false
    rewind_steps: 50
    num_steps: 200
    s_churn: 200
    step_scale: 1.2
    sidechain_mode: true
    skip_mpnn_proportion: 1.0
    noise_schedule:
      _partial_: true
      _target_: "protpardelle.core.diffusion.noise_schedule"
      s_max: 80
      s_min: 0.001

hydra:
  run:
    dir: ""
